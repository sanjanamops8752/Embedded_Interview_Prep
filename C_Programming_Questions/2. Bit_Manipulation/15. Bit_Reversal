#include <stdio.h> 

unsigned char reverse_bits(unsigned char n)
{
    unsigned char rev = 0;           //rev starts as 00000000
    for (int i = 0; i < 8; i++) {
        rev <<= 1;                   //shift rev left by 1 (all bits move left)
        //extract LSB of n and set it as new LSB of rev
        rev |= (n & 1);              //rev = rev OR (n & 1); captures current LSB of n
        n >>= 1;                     //shift n right by 1 to process the next bit
    }
    return rev;                      
}

int main()
{
    unsigned char n = 0xA5;//10100101
    unsigned char result = reverse_bits(n);
    printf("Reversed bits give %d",result); //165 = 0x5A
    return 0;
}

int main()
{
    unsigned char n = 0xA5;//10100101
    unsigned char result = reverse_bits(n);
    printf("Reversed bits give %d",result); //165 = 0x5A
    return 0;
}
