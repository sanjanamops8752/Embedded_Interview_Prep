#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node *next;
};

struct Node *CreateNode(int val) {
    struct Node *node = (struct Node *)malloc(sizeof(struct Node));
    node->data = val;
    node->next = NULL;
    return node;
}

void TraverseList(struct Node *head) {
    struct Node *current = head;
    while(current) {
        printf("%d -> ", current->data);
        current = current->next;
    }
    printf("NULL\n");
}

void ModifyByValue(struct Node *head, int old_val, int new_val) {
    struct Node *current = head;

    while(current != NULL) {
        if(current->data == old_val) {
            current->data = new_val;
            printf("Modified %d to %d\n", old_val, new_val);
            return;
        }
        current = current->next;
    }
    printf("%d not found in the list.\n", old_val);
}

void ModifyByPosition(struct Node *head, int pos, int new_val) {
    struct Node *current = head;
    int index = 1;

    while(current != NULL) {
        if(index == pos) {
            current->data = new_val;
            printf("Modified position %d to %d\n", pos, new_val);
            return;
        }
        current = current->next;
        index++;
    }

    printf("Position %d is out of range.\n", pos);
}

int main() {
    struct Node *head = CreateNode(10);
    head->next = CreateNode(20);
    head->next->next = CreateNode(30);

    TraverseList(head);

    ModifyByValue(head, 20, 200);
    TraverseList(head);

    ModifyByPosition(head, 3, 300);
    TraverseList(head);

    return 0;
}
